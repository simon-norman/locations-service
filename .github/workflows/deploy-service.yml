name: Deploy service

on:
  workflow_dispatch:
    inputs:
      service:
        type: choice
        description: Choose service
        options:
        - locations-api
      environment:
        type: environment
        description: Choose environment

permissions:
    id-token: write
    contents: read

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
     - name: Convert service input format
       id: underscore_service      
       run: |
          # Use shell parameter expansion or tools like sed to replace hyphens with underscores
          converted_value="${{ github.event.inputs.service }}"

          converted_value="${converted_value//-/_}" # Replaces all hyphens with underscores
          
          # Set the converted value as an output of this step
          echo "converted_value=$converted_value" >> $GITHUB_ENV
          echo "::set-output name=converted_value::$converted_value"
     - name: Checkout
       uses: actions/checkout@v3
    #  - name: Cache VPN
    #    uses: actions/cache@v4
    #    with:
    #     path: openvpn-install
    #     key: ${{ runner.os }}-openvpn
     - name: Install OpenVPN
      #  if: steps.cache-primes.outputs.cache-hit != 'true'
       run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved
     - name: Extract VPN config
       run: |
          echo "$VPN_CONFIG" > ./encodedvpn.txt
          base64 --decode -i ./encodedvpn.txt > ./vpn.ovpn
       env:
        VPN_CONFIG: ${{secrets.AWS_VPN_CONFIG}}
     - name: Connect VPN
       run: sudo openvpn --config ./vpn.ovpn --daemon --log openvpn.log --writepid openvpn.pid
     - name: Run VPN  
       run: |
          nslookup 10.0.0.2 10.0.0.2
    #  - uses: simon-norman/actions/deploy@v1
    #    name: Deploy
    #    with:
    #     environment: ${{ inputs.environment }}
    #     file: ./monorepo/Dockerfile
    #     tag: ${{ inputs.service }}-${{ inputs.environment }}:latest
    #     aws_region: eu-west-2
    #     build_target: release_${{ steps.underscore_service.outputs.converted_value }}
    #     aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     app_name: ${{ inputs.service }}
    #    env:
    #     PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}